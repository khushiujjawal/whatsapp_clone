{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khushi/Desktop/whatsapp_clone-main/client/src/component/ChatForm/ChatForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ReactMic } from \"react-mic\";\nimport Picker from \"emoji-picker-react\";\nimport { faSmile, faPaperclip, faMicrophone } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./ChatForm.scss\";\nimport { postRequest } from \"./../../utils/apiRequests\";\nimport { BASE_URL, UPLOAD_AUDIO, UPLOAD_IMAGE_FILE } from \"./../../utils/apiEndpoints\";\n\nconst ChatForm = ({\n  sendMsg,\n  sendTyping\n}) => {\n  _s();\n\n  const [msg, setMsg] = useState(\"\");\n  const [record, setRecord] = useState(false);\n  const [pickerVisible, togglePicker] = useState(false);\n\n  const onEmojiClick = (event, emojiObj) => {\n    setText(msg + emojiObj.emoji);\n    togglePicker(false);\n  };\n\n  const handleChange = e => {\n    setMsg(e.target.value);\n    sendTyping({\n      value: e.target.value,\n      type: \"typing\",\n      theme: \"text\"\n    });\n  };\n\n  const handleSend = e => {\n    if (e.key === \"Enter\") {\n      setMsg(\"\");\n      sendMsg({\n        value: e.target.value,\n        type: \"message\",\n        theme: \"text\"\n      });\n    }\n  };\n\n  const onFileChange = async e => {\n    let filePath = await imageFileUpload(e.target.files[0]);\n    sendMsg({\n      value: filePath,\n      type: \"file\",\n      theme: \"image\"\n    });\n  };\n\n  const imageFileUpload = async file => {\n    const formData = new FormData();\n    formData.append(\"imageMsg\", file, file.name);\n    const response = await postRequest(`${BASE_URL}${UPLOAD_IMAGE_FILE}`, formData);\n    return response;\n  };\n\n  const startRecording = () => {\n    setRecord(true);\n  };\n\n  const stopRecording = () => {\n    setRecord(false);\n  };\n\n  const onData = recordedBlob => {// console.log(recordedBlob);\n  };\n\n  const onStop = async recordedBlob => {\n    let filePath = await audioFileUpload(recordedBlob);\n    sendMsg({\n      value: filePath,\n      type: \"file\",\n      theme: \"audio\"\n    });\n  };\n\n  const audioFileUpload = async file => {\n    const formData = new FormData();\n    formData.append(\"track\", file.blob);\n    const url = `${BASE_URL}${UPLOAD_AUDIO}`;\n    let response = await postRequest(url, formData);\n    return response;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-btn\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"icon-block\",\n        icon: faSmile,\n        onClick: () => togglePicker(!pickerVisible)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), pickerVisible && /*#__PURE__*/_jsxDEV(Picker, {\n        pickerStyle: {\n          position: \"absolute\",\n          bottom: \"60px\"\n        },\n        onEmojiClick: onEmojiClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-share\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => onFileChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"icon-block\",\n          icon: faPaperclip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"chat-input\",\n      placeholder: \"message\",\n      value: msg,\n      onChange: e => handleChange(e),\n      onKeyPress: e => handleSend(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactMic, {\n      record: record,\n      onStop: onStop,\n      onData: onData,\n      visualSetting: \"frequencyBars\",\n      className: \"sound-wave\",\n      strokeColor: \"#999\",\n      backgroundColor: \"#ffffff\",\n      echoCancellation: \"true\",\n      channelCount: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), record ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      onClick: stopRecording,\n      className: \"icon-block active\",\n      icon: faMicrophone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      onClick: startRecording,\n      className: \"icon-block\",\n      icon: faMicrophone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatForm, \"/+7NsY8vuCW7ZBpEvlr1s85Qf4o=\");\n\n_c = ChatForm;\nexport default ChatForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatForm\");","map":{"version":3,"sources":["/home/khushi/Desktop/whatsapp_clone-main/client/src/component/ChatForm/ChatForm.js"],"names":["useState","FontAwesomeIcon","ReactMic","Picker","faSmile","faPaperclip","faMicrophone","postRequest","BASE_URL","UPLOAD_AUDIO","UPLOAD_IMAGE_FILE","ChatForm","sendMsg","sendTyping","msg","setMsg","record","setRecord","pickerVisible","togglePicker","onEmojiClick","event","emojiObj","setText","emoji","handleChange","e","target","value","type","theme","handleSend","key","onFileChange","filePath","imageFileUpload","files","file","formData","FormData","append","name","response","startRecording","stopRecording","onData","recordedBlob","onStop","audioFileUpload","blob","url","position","bottom"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ReactMic } from \"react-mic\";\nimport Picker from \"emoji-picker-react\";\nimport {\n  faSmile,\n  faPaperclip,\n  faMicrophone,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./ChatForm.scss\";\nimport { postRequest } from \"./../../utils/apiRequests\";\nimport {\n  BASE_URL,\n  UPLOAD_AUDIO,\n  UPLOAD_IMAGE_FILE,\n} from \"./../../utils/apiEndpoints\";\n\nconst ChatForm = ({ sendMsg, sendTyping }) => {\n  const [msg, setMsg] = useState(\"\");\n  const [record, setRecord] = useState(false);\n  const [pickerVisible, togglePicker] = useState(false);\n\n  const onEmojiClick = (event, emojiObj) => {\n    setText(msg + emojiObj.emoji);\n    togglePicker(false);\n  };\n\n  const handleChange = (e) => {\n    setMsg(e.target.value);\n    sendTyping({ value: e.target.value, type: \"typing\", theme: \"text\" });\n  };\n\n  const handleSend = (e) => {\n    if (e.key === \"Enter\") {\n      setMsg(\"\");\n      sendMsg({ value: e.target.value, type: \"message\", theme: \"text\" });\n    }\n  };\n\n  const onFileChange = async (e) => {\n    let filePath = await imageFileUpload(e.target.files[0]);\n    sendMsg({ value: filePath, type: \"file\", theme: \"image\" });\n  };\n\n  const imageFileUpload = async (file) => {\n    const formData = new FormData();\n    formData.append(\"imageMsg\", file, file.name);\n    const response = await postRequest(\n      `${BASE_URL}${UPLOAD_IMAGE_FILE}`,\n      formData\n    );\n    return response;\n  };\n\n  const startRecording = () => {\n    setRecord(true);\n  };\n\n  const stopRecording = () => {\n    setRecord(false);\n  };\n\n  const onData = (recordedBlob) => {\n    // console.log(recordedBlob);\n  };\n\n  const onStop = async (recordedBlob) => {\n    let filePath = await audioFileUpload(recordedBlob);\n    sendMsg({ value: filePath, type: \"file\", theme: \"audio\" });\n  };\n\n  const audioFileUpload = async (file) => {\n    const formData = new FormData();\n    formData.append(\"track\", file.blob);\n\n    const url = `${BASE_URL}${UPLOAD_AUDIO}`;\n    let response = await postRequest(url, formData);\n    return response;\n  };\n\n  return (\n    <div className=\"chat-form\">\n      <div className=\"action-btn\">\n        <FontAwesomeIcon\n          className=\"icon-block\"\n          icon={faSmile}\n          onClick={() => togglePicker(!pickerVisible)}\n        />\n        {pickerVisible && (\n          <Picker\n            pickerStyle={{ position: \"absolute\", bottom: \"60px\" }}\n            onEmojiClick={onEmojiClick}\n          />\n        )}\n\n        <div className=\"file-share\">\n          <input type=\"file\" onChange={(e) => onFileChange(e)} />\n          <FontAwesomeIcon className=\"icon-block\" icon={faPaperclip} />\n        </div>\n      </div>\n      <input\n        className=\"chat-input\"\n        placeholder=\"message\"\n        value={msg}\n        onChange={(e) => handleChange(e)}\n        onKeyPress={(e) => handleSend(e)}\n      />\n\n      <ReactMic\n        record={record}\n        onStop={onStop}\n        onData={onData}\n        visualSetting=\"frequencyBars\"\n        className=\"sound-wave\"\n        strokeColor=\"#999\"\n        backgroundColor=\"#ffffff\"\n        echoCancellation=\"true\"\n        channelCount=\"2\"\n      />\n      {record ? (\n        <FontAwesomeIcon\n          onClick={stopRecording}\n          className=\"icon-block active\"\n          icon={faMicrophone}\n        />\n      ) : (\n        <FontAwesomeIcon\n          onClick={startRecording}\n          className=\"icon-block\"\n          icon={faMicrophone}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ChatForm;\n"]},"metadata":{},"sourceType":"module"}